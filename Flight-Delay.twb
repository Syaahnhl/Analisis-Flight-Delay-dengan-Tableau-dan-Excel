<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1227.1336                               -->
<workbook original-version='18.1' source-build='2023.3.1 (20233.23.1227.1336)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet2 (flight delay)' inline='true' name='federated.0gcqamr1hf2p941dectmx1l6khaj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='flight delay' name='excel-direct.0ugreoj063uak612grrw31j8yap9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Data Analyst/flight delay.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ugreoj063uak612grrw31j8yap9' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_delay' ordinal='9' />
            <column datatype='integer' name='carrier_delay' ordinal='10' />
            <column datatype='integer' name='weather_delay' ordinal='11' />
            <column datatype='integer' name='nas_delay' ordinal='12' />
            <column datatype='integer' name='security_delay' ordinal='13' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ugreoj063uak612grrw31j8yap9' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_delay' ordinal='9' />
            <column datatype='integer' name='carrier_delay' ordinal='10' />
            <column datatype='integer' name='weather_delay' ordinal='11' />
            <column datatype='integer' name='nas_delay' ordinal='12' />
            <column datatype='integer' name='security_delay' ordinal='13' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[carrier_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>carrier_delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_66B37C0534844BFB929643A36364260B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Carrier Delay Percentage' datatype='real' name='[Calculation_984036562725896192]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet2' datatype='table' name='[__tableau_internal_object_id__].[Sheet2_66B37C0534844BFB929643A36364260B]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (City,State)' hidden='true' name='[Action (City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devils Lake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greensboro/High Point&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kalispell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lewisburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmira/Corning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hattiesburg/Laurel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lynchburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhinelander&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Augustine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bristol/Johnson City/Kingsport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Del Rio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Junction&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hibbing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattan/Ft. Riley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ogden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plattsburgh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Youngstown/Warren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dothan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Dodge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gulfport/Biloxi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pago Pago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Palm Beach/Palm Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allentown/Bethlehem/Easton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flagstaff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prescott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saginaw/Bay City/Midland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scottsbluff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sun Valley/Hailey/Ketchum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christiansted&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hilo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montrose/Delta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ogdensburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rock Springs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;State College&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomington/Normal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charleston/Dunbar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harrisburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kotzebue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gillette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hayden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jacksonville/Camp Lejeune&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Bend/Coos Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Cloud&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Champaign/Urbana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cordova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hancock/Houghton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Islip&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kodiak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newburgh/Poughkeepsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pellston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raleigh/Durham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Traverse City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wichita Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairbanks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hilton Head&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latrobe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Martha&apos;s Vineyard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mosinee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sarasota/Bradenton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Staunton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Killeen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Midland/Odessa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palm Springs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pullman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shreveport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Yellowstone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arcata/Eureka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Binghamton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedar City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duluth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Leonard Wood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;International Falls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Punta Gorda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tokeen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Plains&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bismarck/Mandan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harlingen/San Benito&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ithaca/Cortland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mission/McAllen/Edinburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News/Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dallas/Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson/Vicksburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moab&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Petersburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bemidji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cold Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flint&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scranton/Wilkes-Barre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beaumont/Port Arthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksburg/Fairmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hobbs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawton/Fort Sill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mason City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sault Ste. Marie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adak Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brainerd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Escanaba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mammoth Lakes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Platte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverton/Lander&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cedar Rapids/Iowa City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Myers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iron Mountain/Kingsfd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasco/Kennewick/Richland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bend/Redmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station/Bryan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dodge City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Collins/Loveland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hyannis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ketchikan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bern/Morehead/Beaufort&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paducah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wenatchee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Branson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:carrier:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;G4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_delay' />
        <field-sort-custom-order field='carrier_delay' />
        <field-sort-custom-order field='Calculation_984036562725896192' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet2' id='Sheet2_66B37C0534844BFB929643A36364260B'>
            <properties context=''>
              <relation connection='excel-direct.0ugreoj063uak612grrw31j8yap9' name='Sheet2' table='[Sheet2$]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='carrier' ordinal='3' />
                  <column datatype='string' name='carrier_name' ordinal='4' />
                  <column datatype='string' name='airport' ordinal='5' />
                  <column datatype='string' name='city' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='string' name='airport_name' ordinal='8' />
                  <column datatype='integer' name='arr_delay' ordinal='9' />
                  <column datatype='integer' name='carrier_delay' ordinal='10' />
                  <column datatype='integer' name='weather_delay' ordinal='11' />
                  <column datatype='integer' name='nas_delay' ordinal='12' />
                  <column datatype='integer' name='security_delay' ordinal='13' />
                  <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0gcqamr1hf2p941dectmx1l6khaj'>
      <datasources>
        <datasource caption='Sheet2 (flight delay)' name='federated.0gcqamr1hf2p941dectmx1l6khaj' />
      </datasources>
      <datasource-dependencies datasource='federated.0gcqamr1hf2p941dectmx1l6khaj'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[tmn:date:qk]' included-values='in-range' />
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_E450A846E4914D809CD583DBB0ED958E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Carrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (flight delay)' name='federated.0gcqamr1hf2p941dectmx1l6khaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0gcqamr1hf2p941dectmx1l6khaj'>
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:carrier:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:arr_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gcqamr1hf2p941dectmx1l6khaj].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:carrier:nk]' />
              <tooltip column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[attr:carrier_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:arr_delay:qk]</rows>
        <cols>[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:carrier:nk]</cols>
      </table>
      <simple-id uuid='{DB8C429E-973E-4660-A965-E87DE6C88E32}' />
    </worksheet>
    <worksheet name='Carrier Delay Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (flight delay)' name='federated.0gcqamr1hf2p941dectmx1l6khaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0gcqamr1hf2p941dectmx1l6khaj'>
            <column caption='Carrier Delay Percentage' datatype='real' name='[Calculation_984036562725896192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
            </column>
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_984036562725896192]' derivation='Avg' name='[avg:Calculation_984036562725896192:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action1_E450A846E4914D809CD583DBB0ED958E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gcqamr1hf2p941dectmx1l6khaj].[tmn:date:qk]</column>
            <column>[federated.0gcqamr1hf2p941dectmx1l6khaj].[Action (Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[avg:Calculation_984036562725896192:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[avg:Calculation_984036562725896192:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gcqamr1hf2p941dectmx1l6khaj].[avg:Calculation_984036562725896192:qk]</rows>
        <cols>[federated.0gcqamr1hf2p941dectmx1l6khaj].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{4991A63A-FF3A-4A09-B225-69AFCEEE9CD4}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (flight delay)' name='federated.0gcqamr1hf2p941dectmx1l6khaj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gcqamr1hf2p941dectmx1l6khaj'>
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport_name]' derivation='Attribute' name='[attr:airport_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action1_E450A846E4914D809CD583DBB0ED958E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0gcqamr1hf2p941dectmx1l6khaj].[Latitude (generated)]</column>
            <column>[federated.0gcqamr1hf2p941dectmx1l6khaj].[Longitude (generated)]</column>
            <column>[federated.0gcqamr1hf2p941dectmx1l6khaj].[Action (Carrier)]</column>
            <column>[federated.0gcqamr1hf2p941dectmx1l6khaj].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[Longitude (generated)]' field-type='quantitative' max='-6690562.5940803718' min='-15202790.509313559' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[Latitude (generated)]' field-type='quantitative' max='8109554.0148036359' min='802875.84952531941' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:city:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:city:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:city:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:state:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='State' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:state:nk]' />
              <color column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:arr_delay:qk]' />
              <geometry column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[Geometry (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='City' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:city:nk]' />
              <size column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:arr_delay:qk]' />
              <lod column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:city:nk]' />
              <tooltip column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[attr:airport_name:nk]' />
              <lod column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.2596685886383057' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.0gcqamr1hf2p941dectmx1l6khaj].[Latitude (generated)]</rows>
        <cols>[federated.0gcqamr1hf2p941dectmx1l6khaj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0B283A86-A6C3-4CE9-9DE8-BDA99705B501}' />
    </worksheet>
    <worksheet name='Total Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (flight delay)' name='federated.0gcqamr1hf2p941dectmx1l6khaj' />
          </datasources>
          <datasource-dependencies datasource='federated.0gcqamr1hf2p941dectmx1l6khaj'>
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_delay]' derivation='Sum' name='[sum:carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:weather_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action1_E450A846E4914D809CD583DBB0ED958E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gcqamr1hf2p941dectmx1l6khaj].[:Measure Names]</column>
            <column>[federated.0gcqamr1hf2p941dectmx1l6khaj].[Action (Carrier)]</column>
            <column>[federated.0gcqamr1hf2p941dectmx1l6khaj].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='18' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-format' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[Multiple Values]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0gcqamr1hf2p941dectmx1l6khaj].[:Measure Names]' value='bold' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gcqamr1hf2p941dectmx1l6khaj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0gcqamr1hf2p941dectmx1l6khaj].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{12108849-75E2-4FC9-AA95-0EBA8D4D5371}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='US Flight Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet2 (flight delay)' name='federated.0gcqamr1hf2p941dectmx1l6khaj' />
      </datasources>
      <datasource-dependencies datasource='federated.0gcqamr1hf2p941dectmx1l6khaj'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='21' param='vert' type-v2='layout-flow' w='99152' x='424' y='940'>
            <zone h='5758' id='22' type-v2='title' w='99152' x='424' y='940'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92362' id='19' type-v2='layout-basic' w='99152' x='424' y='6698'>
              <zone h='88385' id='17' param='horz' type-v2='layout-flow' w='99152' x='424' y='10675'>
                <zone h='88385' id='15' type-v2='layout-basic' w='99152' x='424' y='10675'>
                  <zone h='80026' id='7' param='horz' type-v2='layout-flow' w='99152' x='424' y='19034'>
                    <zone h='80026' id='5' type-v2='layout-basic' w='99152' x='424' y='19034'>
                      <zone h='80026' id='3' name='Map' w='49575' x='424' y='19034'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='40012' id='11' name='Carrier' w='49577' x='49999' y='19034'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='40014' id='13' name='Carrier Delay Percentage' w='49577' x='49999' y='59046'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='8359' id='14' name='Total Delay' show-title='false' w='99152' x='424' y='10675'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='3977' id='18' name='Carrier Delay Percentage' param='[federated.0gcqamr1hf2p941dectmx1l6khaj].[tmn:date:qk]' show-title='false' type-v2='filter' values='database' w='99152' x='424' y='6698'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='23' param='vert' type-v2='layout-flow' w='99152' x='424' y='940'>
                <zone h='5758' id='22' type-v2='title' w='99152' x='424' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='59' h='8359' id='14' is-fixed='true' name='Total Delay' show-title='false' w='99152' x='424' y='10675'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='80026' id='3' is-fixed='true' name='Map' w='49575' x='424' y='19034'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40012' id='11' is-fixed='true' name='Carrier' w='49577' x='49999' y='19034'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3977' id='18' name='Carrier Delay Percentage' param='[federated.0gcqamr1hf2p941dectmx1l6khaj].[tmn:date:qk]' show-title='false' type-v2='filter' values='database' w='99152' x='424' y='6698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40014' id='13' is-fixed='true' name='Carrier Delay Percentage' w='49577' x='49999' y='59046'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{546374B3-F4A0-4681-BE82-97AE26678F85}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' show-side-pane='false' source-height='37'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='185'>
            <card pane-specification-id='0' param='[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:arr_delay:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0gcqamr1hf2p941dectmx1l6khaj].[sum:arr_delay:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:airport_name:nk]</field>
            <field>[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:city:nk]</field>
            <field>[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AEEF32D-2195-483B-B20D-FFED0CEB320C}' />
    </window>
    <window class='worksheet' name='Carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:carrier:nk]</field>
            <field>[federated.0gcqamr1hf2p941dectmx1l6khaj].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57647C5A-1DEB-4499-8D64-DEAF1E3E27B9}' />
    </window>
    <window class='worksheet' name='Carrier Delay Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gcqamr1hf2p941dectmx1l6khaj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{351E10DD-43A6-42C5-A571-33EC84B3B169}' />
    </window>
    <window class='worksheet' name='Total Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0gcqamr1hf2p941dectmx1l6khaj].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61C4BAFF-42E5-4BDA-A4C2-46A533E95757}' />
    </window>
    <window class='dashboard' maximized='true' name='US Flight Delay'>
      <viewpoints>
        <viewpoint name='Carrier'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Carrier Delay Percentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Delay'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{119004FF-2BF0-4DB2-9AFF-E8C6652E8291}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carrier' width='192'>
      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
      3+P/AbmjICYLABVNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Carrier Delay Percentage' width='192'>
      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
      ARBK2v8EfPF1kaxIPhIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='66' name='Total Delay' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='US Flight Delay' width='192'>
      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
      f4cUvdd6zAs2AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
